{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["Cvv","toggleModalCvv","onChangeCvv","className","onClick","type","value","App","useState","cardNum","setCardNum","modalCvv","setModalCvv","cvv","setCvv","month","setMonth","year","setYear","src","alt","onChange","e","num","target","length","res","split","join","Number","isInteger","arr","toString","match","required","disabled","readOnly","newState","slice","alert","window","location","reload","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.64af37cf.chunk.js","sourcesContent":["import './App.css';\nimport {useState} from \"react\";\n\nfunction App() {\n\n    const [cardNum, setCardNum] = useState('');\n    const [modalCvv, setModalCvv] = useState(false);\n    const [cvv, setCvv] = useState('');\n    const [month, setMonth] = useState('month');\n    const [year, setYear] = useState('year');\n\n    //Card number\n    const onCardNumChange = (e) => {\n        let num = e.target.value;\n        if (num.length < 20) {\n            let res = +(num.split(' ').join(''));\n            if (res.length > 14) return;\n            if (Number.isInteger(res)) {\n                let arr = res.toString().match(/.{1,4}/g);\n                setCardNum(arr.join(' '));\n            }\n            if (!num) {\n                setCardNum('');\n            }\n        }\n    }\n\n    //---------DATE---------//\n    //Month\n    const onChangeMonth = (e) => {\n        setMonth(e.target.value);\n    }\n    //Year\n    const onChangeYear = (e) => {\n        setYear(e.target.value);\n    }\n    //CVV\n    const toggleModalCvv = () => {\n        setModalCvv(!modalCvv);\n    }\n    const onChangeCvv = (e) => {\n        let newState = cvv;\n        if (newState.length > 2 && e.target.value !== 'C') return;\n        if (e.target.value === 'C') {\n            newState = newState.slice(0, newState.length - 1)\n        } else\n            newState += e.target.value;\n        setCvv(newState);\n        if (newState.length === 3)\n            toggleModalCvv();\n    }\n    //Result\n    const resultFunc = () => {\n        if (cardNum.length < 14) {\n            alert('Card Number error');\n            return;\n        } else if (cvv.length < 3) {\n            alert('CVV error');\n            return;\n        }\n        alert(\n            `Card Number: ${cardNum} \\nExpiration Date: ${month}/${year} \\nCVV: ${cvv}`\n        );\n        window.location.reload();\n    }\n    return (\n        <div className=\"jumbotron d-flex align-items-center min-vh-100\">\n            <div className={'container border p-5'}>\n                <div className={'row'}>\n                    <div className={\"container-inner row\"}>\n                        <img className={'card-img m-auto'}\n                             src={'https://www.pinclipart.com/picdir/big/567-5679765_credit-card-vector-png-clipart.png'}\n                             alt={\"Card\"}/>\n                    </div>\n                    <form>\n                        <label className={'form-label'}>Card Number</label>\n                        <input className={'form-control mb-3'} type={\"text\"} value={cardNum} onChange={onCardNumChange}\n                               required/>\n                        <label className={'form-label'}>Expiration Date</label>\n                        <div className={\"input-group mb-3\"}>\n                            <select className=\"form-select\" onChange={onChangeMonth} value={month} required>\n                                <option disabled>Month</option>\n                                <option value={'Jan'}>01</option>\n                                <option value={'Feb'}>02</option>\n                                <option value={'Mar'}>03</option>\n                                <option value={'Apr'}>04</option>\n                                <option value={'May'}>05</option>\n                                <option value={'May'}>06</option>\n                                <option value={'May'}>07</option>\n                                <option value={'May'}>08</option>\n                                <option value={'May'}>09</option>\n                                <option value={'May'}>10</option>\n                                <option value={'May'}>11</option>\n                                <option value={'May'}>12</option>\n                            </select>\n                            <span className={'input-group-text'}>/</span>\n                            <select className={\"form-select\"} value={year} onChange={onChangeYear} required>\n                                <option disabled>Year</option>\n                                <option>2021</option>\n                                <option>2022</option>\n                                <option>2023</option>\n                                <option>2024</option>\n                                <option>2025</option>\n                                <option>2026</option>\n                            </select>\n                        </div>\n                        <label className={'form-label'}>CVV</label>\n                        <input className={'form-control readonly-cvv mb-3'} readOnly={'readonly'} type={\"password\"}\n                               value={cvv} onClick={toggleModalCvv} required/>\n                        {modalCvv && <Cvv toggleModalCvv={toggleModalCvv} onChangeCvv={onChangeCvv}/>}\n                        <input className={\"btn btn-primary\"} type={\"button\"} onClick={resultFunc} value={'Send'}/>\n                    </form>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nconst Cvv = ({toggleModalCvv, onChangeCvv}) => {\n    return (\n        <div>\n            <div className={'bg-modal'} onClick={toggleModalCvv}></div>\n            <div className={'modal-cvv'}>\n                <div className={\"row\"}>\n                    <input type={'button'} className={'col btn btn-primary border'} value={'1'} onClick={onChangeCvv}/>\n                    <input type={'button'} className={'col btn btn-primary border'} value={'2'} onClick={onChangeCvv}/>\n                    <input type={'button'} className={'col btn btn-primary border'} value={'3'} onClick={onChangeCvv}/>\n                </div>\n                <div className={\"row\"}>\n                    <input type={'button'} className={'col btn btn-primary border'} value={'4'} onClick={onChangeCvv}/>\n                    <input type={'button'} className={'col btn btn-primary border'} value={'5'} onClick={onChangeCvv}/>\n                    <input type={'button'} className={'col btn btn-primary border'} value={'6'} onClick={onChangeCvv}/>\n                </div>\n                <div className={\"row\"}>\n                    <input type={'button'} className={'col btn btn-primary border'} value={'7'} onClick={onChangeCvv}/>\n                    <input type={'button'} className={'col btn btn-primary border'} value={'8'} onClick={onChangeCvv}/>\n                    <input type={'button'} className={'col btn btn-primary border'} value={'9'} onClick={onChangeCvv}/>\n                </div>\n                <div className={\"row\"}>\n                    <input type={'button'} className={'col btn btn-primary border'} value={'C'} onClick={onChangeCvv}/>\n                    <input type={'button'} className={'col btn btn-primary border'} value={'0'} onClick={onChangeCvv}/>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}